services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_DB_PORT}:${POSTGRES_DB_DOCKER_PORT}"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_DB_USERNAME} -d ${POSTGRES_DB_NAME}'" ]
      interval: 10s
      timeout: 5s
      retries: 10
  db-migration:
    image: liquibase/liquibase
    volumes:
      - ./db-migration/db/changelog:/liquibase/changelog
    environment:
      - LIQUIBASE_URL=jdbc:postgresql://${POSTGRES_DB_URL}:${POSTGRES_DB_PORT}/${POSTGRES_DB_NAME}
      - LIQUIBASE_USER=${POSTGRES_DB_USERNAME}
      - LIQUIBASE_PASSWORD=${POSTGRES_DB_PASSWORD}
      - LIQUIBASE_CHANGELOG=/liquibase/changelog/db.changelog-master.yaml
    command:
      - update
    depends_on:
      postgres:
        condition: service_healthy
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB_URL: ${POSTGRES_DB_URL}
      POSTGRES_DB_USERNAME: ${POSTGRES_DB_USERNAME}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
      POSTGRES_DB_DOCKER_PORT: ${POSTGRES_DB_DOCKER_PORT}
    depends_on:
      - db-migration
    ports:
      - "${USER_SERVICE_PORT}:${EXTERNAL_PORT}"
    networks:
      - app-network
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "${KAFKA_INTERNAL_PORT}:${KAFKA_INTERNAL_PORT}"
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}"
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: INTERNAL://:${KAFKA_INTERNAL_PORT},EXTERNAL://:${KAFKA_EXTERNAL_PORT},CONTROLLER://:${KAFKA_CONTROLLER_PORT}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:${KAFKA_INTERNAL_PORT},EXTERNAL://${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:${KAFKA_CONTROLLER_PORT}
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_HEAP_OPTS: -Xmx512m -Xms512m
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "${KAFKA_UI_EXTERNAL_PORT}:${KAFKA_UI_INTERNAL_PORT}"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${KAFKA_UI_CONNECT_TO_KAFKA_PORT}
    depends_on:
      - kafka
    networks:
      - kafka-network

volumes:
  postgres_data:
  kafka_data:

networks:
  app-network:
    driver: bridge
  kafka-network:
    driver: bridge